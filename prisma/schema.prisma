generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  outlet      outlet[]
  tool        tool[]
}

model outlet {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  company_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rental     rental[]
}

model rental {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tool_id     String?   @db.Uuid
  outlet_id   String?   @db.Uuid
  user_id     String?   @db.Uuid
  rental_date DateTime  @db.Date
  return_date DateTime? @db.Date
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  outlet      outlet?   @relation(fields: [outlet_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tool        tool?     @relation(fields: [tool_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tool {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String   @db.VarChar(255)
  availability_status Boolean
  company_id          String?  @db.Uuid
  created_at          DateTime @default(now()) @db.Timestamp(6)
  updated_at          DateTime @default(now()) @db.Timestamp(6)
  rental              rental[]
  company             company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
  rental      rental[]
}
